{
    "learning settings": {
        "mtl": true,
        "mtl comment": "mtl learning control whether to use multi-task learning or a single task learning",
        "ch_learning": false,
        "ch learning comment": "ch learning refers to Counter-Hebbian learning instead of back-propagation",
        "task": "left/right",
        "task available options": ["left/right", null],
        "task_size": 2,
        "n_tasks": 2,
        "network_name": "simple net",
        "network available options": ["simple net", "resnet", "conv net"],
        "shared_weights": true,
        "shared weights comment": "whether the TD network use the BU weights or its own unique weights",
        "non_linearity_fn": "relu",
        "lateral_fn": "galu",
        "bias": true,
        "back_bias": false,
        "back bias comment": "a bias for the TD network"
    },

    "architecture parameters": {
        "norm_layer": "no_norm",
        "task_embedding_size": 50,
        "last_hidden_size": 50,
        "conv_channels": [64, 64]
    },

    "evaluation parameters": {
        "metric_name": "Accuracy",
        "metric available options": ["Accuracy", "Micro F1"],
        "loss_name": "CrossEntropy",
        "loss available options": ["MSE", "CrossEntropy", "BCE"]
    },

    "data set parameters": {
        "comment": "parameters for creating a data set, if data path is provided, the data set will be loaded",
        "dataset_name": "multi_mnist",
        "dataset available options": ["multi mnist"],
        "dataset_row": true,
        "data row comment": "when set to true each data sample will be multiple images taken from the origin data and concatenated to a row side by side",
        "imgs_in_row": 4,
        "data_size": 50000,
        "train_percent": 0.8,
        "data_path": null,
        "batch_size": 64
    },

    "optimizer parameters": {
      "optimizer_name": "Adam",
      "optimizer available options": ["SGD", "Adam"],
      "lr": 0.0005,
      "epochs": 100,
      "lr_decay": 0.95
    },

    "saved_model_path": null
}
